我做了什么工作
2021年2月

在上大学之前，我主要在校外做两件事：写作和编程。我不是写论文，而是写初学者作家当时应该写的东西，可能现在还是：短篇小说。我的故事很糟糕。它们几乎没有情节，只有感情强烈的角色，我想象这使它们看起来很深刻。

我第一次尝试编写的程序是在学校区使用的IBM 1401上，当时被称为“数据处理”。那是在九年级，所以我大概是13或14岁。学区的1401碰巧在我们初中的地下室里，我和朋友Rich Draves得到了使用它的许可。那里就像一个迷你邦德反派的巢穴，所有这些外观奇异的机器——CPU、磁盘驱动器、打印机、卡片阅读器——都放在明亮的荧光灯下的抬高地板上。

我们使用的语言是Fortran的早期版本。你必须在打孔卡上输入程序，然后将它们堆叠在卡片阅读器中，按下按钮将程序加载到内存中并运行它。结果通常是在非常响亮的打印机上打印一些东西。

我对1401感到困惑。我不知道该如何使用它。回想起来，我本可以用它做不了太多。程序唯一的输入形式是打在卡片上的数据，而我没有任何打在卡片上的数据。另一个选择是做一些不依赖任何输入的事情，比如计算π的近似值，但我数学知识不足以做任何有趣的事情。所以我不惊讶我记不得我写的任何程序，因为它们不可能做太多。我最清晰的记忆是我学习到程序可能不会终止的那一刻，因为我的一个程序没有终止。在没有分时系统的机器上，这不仅是一个技术错误，也是一个社会错误，就像数据中心经理的表情所清楚表明的那样。

有了微型计算机，一切都变了。现在你可以有一台电脑就在你面前的桌子上，它可以在你打字时响应你，而不是只是处理一堆打孔卡然后停止。[1]

我第一个拥有微型计算机的朋友是自己组装的。它是由Heathkit以套件的形式出售的。我清楚地记得，看着他坐在它前面，直接在计算机中输入程序，我感到非常印象深刻和羡慕。

计算机在那些日子里很贵，我花了好几年的唠叨才说服我父亲在大约1980年买了一台TRS-80。那时的黄金标准是Apple II，但TRS-80已经足够好了。这是我真正开始编程的时候。我编写了简单的游戏，一个预测我的模型火箭能飞多高的程序，以及我父亲用来写作至少一本书的文字处理器。内存中只有大约两页文本的空间，所以他一次写两页，然后打印出来，但这比打字机好多了。

尽管我喜欢编程，但我并不打算在大学学习它。在大学里，我打算学习哲学，这听起来要强大得多。在我看来，对于我这个天真的高中生来说，它似乎是对最终真理的研究，与其他领域的研究相比，后者只不过是领域知识。但当我到了大学，我发现其他领域占据了思想空间的这么多，以至于没有剩下多少空间给这些所谓的最终真理。哲学所剩下的似乎只是其他领域的人在认为可以安全忽略的情况下的边缘情况。

我18岁的时候无法用言语表达这一点。当时我所知道的就是我一直在上哲学课程，它们一直很无聊。所以我决定转到人工智能。

在20世纪80年代中期，人工智能在空气中无处不在，但有两件事特别让我想要从事这项工作：海因莱因的一部小说《月亮是一个残酷的女主人》，其中有一个叫做迈克的智能计算机，以及一个PBS纪录片，展示了特里·温诺格拉德使用SHRDLU。我还没有尝试重读《月亮是一个残酷的女主人》，所以我不知道它有多经久不衰，但当我读到它时，我完全被它的世界所吸引。看来我们拥有迈克只是时间问题，当我看到温诺格拉德使用SHRDLU时，看起来这个时间最多是几年。你所要做的就是教SHRDLU更多的单词。

那时康奈尔大学甚至没有人工智能课程，连研究生课程都没有，所以我开始尝试自学。这意味着学习Lisp，因为在那些日子里，Lisp被视为人工智能的语言。那时常用的编程语言相当原始，程序员的想法也是如此。康奈尔大学默认的语言是一种类似Pascal的语言，称为PL/I，其他地方的情况类似。学习Lisp让我对程序的概念扩展得如此之快，以至于过了好几年我才开始对新的极限有所感觉。这才是我想要的；这就是我期望大学做的事情。它没有像应该的那样在课堂上发生，但这没关系。在接下来的几年里，我一直在努力。我知道我要做什么。

对于我的本科论文，我逆向工程了SHRDLU。我的天，我非常喜欢在那个程序上工作。这是一段令人愉悦的代码，但更令人兴奋的是，我的信念——现在很难想象，但在1985年并不独特——它已经在攀登智能的低坡了。

我进入了一个康奈尔大学的项目，这个项目不让你选择专业。你可以上你喜欢的任何课程，并选择你想要放在学位上的任何东西。我当然选择了“人工智能”。当我拿到实际的物理文凭时，我感到沮丧，因为引号被包括在内，这使得它们读起来像是用引号括起来的。当时这让我很烦，但现在它看起来非常准确地，因为我即将发现的原因。

我申请了3所研究生院：麻省理工学院和耶鲁大学，当时以人工智能闻名，还有哈佛大学，我去那里是因为Rich Draves去了那里，也是比尔·伍兹的家乡，他发明了我在我的SHRDLU克隆中使用的解析器类型。只有哈佛大学接受了我，所以我去了那里。

我不记得那一刻是什么时候发生的，或者是否有一个特定的时刻，但在研究生的第一年，我意识到当时的人工智能实践是一场骗局。我的意思是，那种人工智能程序被告知“狗坐在椅子上”，将其转换成一些正式的表示，并将其添加到它所知道的事物列表中。

这些程序真正展示的是自然语言的一个子集是形式语言。但是一个非常合适的子集。很明显，它们所能做的和真正理解自然语言之间存在着不可逾越的鸿沟。事实上，这不仅仅是教SHRDLU更多单词的问题。那种用显式数据结构表示概念的人工智能方式是行不通的。它的破碎性确实像经常发生的那样，产生了许多机会来写论文，讨论可以应用到它上面的各种补丁，但它永远不会给我们迈克。

所以我四处寻找我可以从我的计划的残骸中挽救出来的东西，还有Lisp。我知道从经验中，Lisp本身就很有趣，不仅仅是因为它与人工智能的关联，即使那是当时人们关心它的主要原因。所以我决定专注于Lisp。事实上，我决定写一本关于Lisp黑客的书。想想我写那本书时对Lisp黑客了解得多么少，真是令人害怕。但是没有什么比写一本关于某事的书更能帮助你学习它了。这本书《On Lisp》直到1993年才出版，但我在研究生院写了很多。

计算机科学是理论和系统之间的不稳定联盟。理论家证明事情，系统家构建东西。我想构建东西。我对理论有足够的尊重——事实上，我怀疑它是两者中更令人钦佩的一半——但是构建东西看起来更令人兴奋。

然而，系统工作的问题在于它不持久。无论你今天编写的程序有多好，最好的情况下，几十年后就会过时。人们可能会在脚注中提到你的软件，但没有人会真正使用它。事实上，它看起来非常软弱的工作。只有对领域历史有感觉的人才会意识到，在其时代，它是好的。

曾经有一段时间，计算机实验室周围有一些多余的施乐蒲公英。任何想要一个玩耍的人都可以拥有一个。我短暂地动心了，但按照现在标准，它们太慢了；那有什么意义？其他人也不想要一个，所以它们就走了。这就是系统工作的命运。

我不想只是构建东西，我想构建持久的东西。

在这种不满的状态下，我于1988年去卡内基梅隆大学拜访了在那里读研究生的Rich Draves。有一天，我去参观了卡内基研究所，我小时候在那里度过了很多时间。在看那里的一幅画时，我意识到了一些可能看起来显而易见，但对我来说是一个大惊喜的事情。在墙上，有一些东西你可以制作，它会持久。画作不会过时。其中一些最好的画作有几百年的历史。

而且这还是你可以谋生的东西。当然，不像写软件那么容易，但我认为如果你真的勤奋并且生活得非常节俭，你必须有可能赚到足够的钱来生存。作为一个艺术家，你可以真正独立。你不会有老板，甚至不需要获得研究资金。

我一直喜欢欣赏画作。我能制作它们吗？我不知道。我从未想过这甚至是可能的。我理智上知道人们制作艺术——它不是自发出现的——但就好像制作它的人是不同的物种。他们要么很久以前就生活了，要么是在《生活》杂志的个人资料中做奇怪事情的神秘天才。实际上能够制作艺术，将那个动词放在那个名词之前，似乎几乎是奇迹。

那年秋天，我开始在哈佛上艺术课。研究生可以在任何系上课，我的导师Tom Cheatham非常随和。如果他甚至知道我正在上这些奇怪的课程，他从来没有说过什么。

所以现在，我在一个计算机科学博士项目中，却计划成为一名艺术家，同时也真心热爱Lisp黑客，并致力于《On Lisp》的工作。换句话说，就像许多研究生一样，我正在精力充沛地从事多个项目，这些项目不是我的论文。

我看不出如何摆脱这种局面。我不想退出研究生院，但我怎么能走出来呢？我记得当我的朋友Robert Morris因编写1988年的互联网蠕虫而被康奈尔大学开除时，我羡慕他找到了这样一个惊人的方式退出研究生院。

然后，在1990年4月的一天，墙上出现了一条裂缝。我偶然遇到了教授Cheatham，他问我是否足够接近毕业，可以在那年6月毕业。我连论文的一个字都没写，但在我一生中思维最快的时刻，我决定尝试在截止日期前剩下的大约五周内写一篇论文，尽可能地重用《On Lisp》的部分，我能够毫不延迟地回答：“是的，我想是的。几天后我会给你一些阅读材料。”

我选择了继续体的应用作为主题。回想起来，我应该写关于宏和嵌入式语言的文章。那里有一个整个世界，几乎没有被探索过。但我当时想要的只是摆脱研究生院，我迅速写成的论文足够了，勉强通过了。

与此同时，我正在申请艺术学校。我申请了美国的RISD和佛罗伦萨的Accademia di Belle Arti，因为这是历史最悠久的艺术学校，我认为它应该是好的。RISD接受了我，我从未收到Accademia的回音，所以我去了普罗维登斯。

我申请了RISD的BFA项目，这意味着我实际上必须再次上大学。这听起来并不像听起来那么奇怪，因为我只有25岁，艺术学校里充满了不同年龄的人。RISD将我视为转学生大二，并表示我必须在那个夏天做基础工作。基础工作意味着每个人都必须在绘画、色彩和设计等基础学科上学习的课程。

在夏天快结束时，我大吃一惊：收到了Accademia的一封信，因为它们将其发送到英格兰剑桥而不是马萨诸塞州剑桥，邀请我在那个秋天去佛罗伦萨参加入学考试。现在只剩下几周时间了。我善良的房东让我把我的东西留在她的阁楼上。我在研究生院期间从咨询工作中存了一些钱；如果生活节俭，可能足够一年。现在我所要做的就是学习意大利语。

只有外国人才需要参加这个入学考试。回想起来，这可能是一种排除他们的方式，因为有很多外国人被在佛罗伦萨学习艺术的想法所吸引，否则意大利学生将被他们的数量所压倒。我在RISD的基础课程中在绘画和绘画方面处于良好状态，但我仍然不知道我是如何通过书面考试的。我记得我通过写关于塞尚的文章来回答论文问题，我尽可能地提高智力水平，以最大限度地利用我有限的词汇量。[2]

我只是25岁，但已经有了如此明显的模式。我即将再次参加一些声望很高的机构，希望学习一些有声望的科目，然而再次感到失望。Accademia的绘画系的学生和教师都是你能想象到的最好的人，但他们早就达成了一个安排，即学生不会要求教师教授任何东西，作为回报，教师也不会要求学生学习任何东西。同时，所有参与者都会公开坚持19世纪工作室的传统。我们实际上有一个你在19世纪工作室画作中看到的那种小炉子，用木柴喂养，还有一个裸体模特坐在离它尽可能近的地方而不被烧伤。除了我，几乎没有其他人画她。其他学生大部分时间都在聊天，偶尔试图模仿他们在American art magazines上看到的东西。

我们的模特原来就住在我家楼下。她通过模特和为当地古董商制作赝品来谋生。她会复制一本书中一个不知名的旧画，然后他会接过复制品并虐待它，使其看起来古老。[3]

当我在Accademia学习时，我开始在卧室里画静物画。这些画很小，因为房间很小，因为我在剩下的画布碎片上画它们，那是我当时能负担得起的。画静物与画人物不同，因为主题，顾名思义，不能动。人们不能坐超过大约15分钟，当他们这样做时，他们不会坐得很安静。所以画人物的传统方法是知道如何画一个通用的人，然后将其修改以匹配你正在画的特定人物。而静物，如果你愿意，可以从你看到的像素到像素进行复制。你当然不想就此止步，否则你会得到仅仅是照片般的准确性，而静物画之所以有趣，是因为它已经过大脑。你想要强调视觉线索，这些线索告诉你，例如，颜色在某个点突然变化的原因是因为它是一个物体的边缘。通过微妙地强调这些事物，你可以制作出比照片更真实的画作，这不仅仅是在某种隐喻意义上，而且在严格的信息论意义上。[4]

我喜欢画静物，因为我对我所看到的感到好奇。在日常生活中，我们并不有意识地意识到我们所看到的大部分。大多数视觉感知由低级过程处理，这些过程只是告诉你的大脑“那是一个小水滴”，而不告诉你最亮和最暗的点在哪里，或者“那是一丛灌木”，而不告诉你每片叶子的形状和位置。这是大脑的一个特征，而不是一个错误。在日常生活中，注意到每一片灌木上的每一片叶子会分散注意力。但当你不得不画某物时，你必须更仔细地看，当你这样做时，有很多可看的东西。你可以在几天内仍然注意到新事物，就像你试图画一些人们通常会认为理所当然的东西一样。

这并不是唯一的绘画方式。我不确定这是否甚至是一个好的绘画方式。但这似乎是一个足够好的赌注，值得尝试。

我们的老师，Ulivi教授，是个好人。他看得出我工作很努力，给了我一个好成绩，他把这个成绩写在每个学生都有的一种护照上。但是Accademia除了教我意大利语之外没有教我任何东西，我的钱也快用完了，所以在第一年结束时我回到了美国。

我想回到RISD，但现在我破产了，RISD非常昂贵，所以我决定找一份工作，然后在下一个秋天回到RISD。我在一家名为Interleaf的公司找到了一份工作，该公司生产创建文档的软件。你的意思是像Microsoft Word吗？没错。这就是我学到的低端软件往往会吞噬高端软件。但Interleaf还有几年的生命。[5]

Interleaf做了一些非常大胆的事情。受到Emacs的启发，他们增加了一种脚本语言，甚至使脚本语言成为Lisp的方言。现在他们想要一个Lisp黑客来用它写东西。这是我拥有的最接近正常工作的工作，我在此向我的老板和同事道歉，因为我是一个糟糕的员工。他们的Lisp是在巨大的C蛋糕上的最薄的糖霜，因为我不懂C也不想学它，所以我从未真正理解过大部分软件。此外，我非常不负责任。那时，编程工作意味着在某些工作时间内每天出现。这对我来说似乎不自然，在这方面，世界其他部分正在逐渐接受我的想法，但在当时它引起了很多摩擦。在那一年的年底，我大部分时间都在秘密地研究《On Lisp》，那时我已经得到了出版合同。

好的部分是我得到了大量的报酬，特别是按照艺术学生的标准。在佛罗伦萨，支付了我的一部分租金后，我每天的其他预算是7美元。现在，我每个小时的收入超过那个数字的4倍，即使我只是坐在会议室里。通过节俭生活，我不仅设法存够了钱回到RISD，还还清了我的大学贷款。

在Interleaf，我学到了一些有用的东西，尽管它们大多是关于不要做什么的。我了解到，科技公司最好由产品人员而不是销售人员运营（尽管销售是一项真正的技能，擅长它的人真的非常擅长它），当代码被太多人编辑时会导致错误，便宜的办公空间如果是令人沮丧的，那就不是便宜货，计划中的会议不如走廊对话，大型、官僚的客户是危险的资金来源，以及传统的办公时间和最佳黑客时间之间没有太多重叠，传统的办公室和最佳地点之间也是如此。

但我学到的最重要的东西，我在Viaweb和Y Combinator中都使用了，那就是低端吞噬高端：成为“入门级”选项是好的，即使这将不太有声望，因为如果你不是，有人会是，并且会将你压在天花板上。反过来，这意味着声望是一个危险信号。

当我在下一个秋天离开回到RISD时，我安排为该组做自由职业工作，为顾客做项目，这就是我接下来几年的生存方式。后来，当我回来进行一个项目访问时，有人告诉我关于一个叫做HTML的新事物，他描述它为SGML的衍生物。标记语言爱好者在Interleaf是一种职业危害，我忽略了他，但后来HTML成为了我生活的一个重要部分。

1992年秋天，我搬回普罗维登斯继续在RISD学习。基础只是介绍性的东西，Accademia不过是一个（非常文明的）笑话。现在我要看看真正的艺术学院是什么样子。但遗憾的是，它更像是Accademia而不是不是。它组织得更好，当然，也更昂贵，但现在变得清楚的是，艺术学院与艺术的关系并不像医学院与医学的关系一样。至少不是绘画系。我的隔壁邻居所属的纺织系似乎非常严格。毫无疑问，插图和建筑学也是如此。但绘画是后严格的。绘画学生应该表达自己，对于更世俗的人来说意味着试图想出一个独特的签名风格。

签名风格是表演艺术中被称为“噱头”的视觉等价物：立即识别作品是你的而不是别人的某些东西。例如，当你看到一幅看起来像某种卡通的画时，你知道它是由罗伊·利希滕斯坦画的。所以如果你在对冲基金经理的公寓里看到一幅这种类型的大画，你知道他为此支付了数百万美元。艺术家拥有签名风格并不总是这个原因，但买家为这类作品支付高价通常是这个原因。[6]

还有很多认真的学生：在高中“会画画”的孩子，现在来到了这个被认为是全国最好的艺术学院，学习画得更好。他们对在RISD发现的东西感到困惑和沮丧，但他们继续前进，因为绘画是他们所做的事情。我不是在高中会画画的孩子之一，但在RISD我肯定更接近他们的部落，而不是签名风格寻求者的部落。

我在RISD上的色彩课上学到了很多东西，但除此之外，我基本上是自学绘画，我可以免费这样做。所以在1993年我退学了。我在普罗维登斯逗留了一段时间，然后我的大学朋友南希·帕米特帮了我一个大忙。她母亲在纽约拥有的一栋建筑中有一套受租金管制的公寓即将空出来。我想要吗？它并不比我现在的住所贵多少，而且纽约被认为是艺术家所在的地方。所以是的，我想要！

阿斯特里克斯漫画一开始就放大到罗马高卢的一个很小的角落，结果不是由罗马人控制的。你可以在纽约市的地图上做一个类似的事情：如果你放大到上东区，有一个很小的角落并不富裕，或者至少在1993年不是。它被称为约克维尔，这是我的新家。现在我是一个纽约艺术家——严格意义上是在纽约制作绘画并居住的艺术家。

我对金钱感到紧张，因为我能感觉到Interleaf正在走下坡路。自由职业的Lisp黑客工作非常罕见，我不想用另一种语言编程，这在那些日子里如果是幸运的话可能意味着C++。所以我凭借对财务机会的敏锐嗅觉，决定再写一本关于Lisp的书。这将是一本通俗的书，可以作为教科书使用。我想象自己节俭地靠版税生活，把所有时间都花在绘画上。（这本书封面上的绘画，ANSI Common Lisp，是我在这段时间画的。）

纽约对我来说最好的事情是Idelle和Julian Weber的存在。Idelle Weber是一位画家，是早期的照相写实主义者之一，我曾在哈佛上过她的绘画课。我从未认识过一个比她更受学生喜爱的老师。大量的前学生与她保持联系，包括我。搬到纽约后，我成了她的事实上的工作室助理。

她喜欢在大的正方形画布上绘画，每边4到5英尺。1994年末的某一天，当我正在拉伸其中一个这样的庞然大物时，收音机里有一些关于一位著名基金经理的事情。他并不比我大多少，而且非常富有。我突然想到：我为什么不变得富有呢？然后我就可以想做什么就做什么了。

与此同时，我越来越多地听说了这个新事物——万维网。Robert Morris在我在剑桥访问他时向我展示了它，他现在在哈佛读研究生。对我来说，网络似乎会成为一个大事。我已经看到了图形用户界面对微型计算机普及的影响。看起来网络会对互联网产生同样的影响。

这段文字是Paul Graham对自己创业历程和个人生活的回顾，内容非常丰富，涉及多个方面。以下是对这段文字的翻译：

如果我当初想要致富，那么下一辆离开站台的火车就在这里。关于那部分，我是对的。我搞错的是想法。我决定我们应该开一家公司，将艺术画廊放到网上。我不能诚实地说，在阅读了这么多Y Combinator的申请后，这是有史以来最糟糕的创业想法，但它绝对是其中之一。艺术画廊不想上网，现在仍然不想，尤其是那些高档的画廊。他们不是这样卖东西的。我写了一些软件来为画廊生成网站，而Robert则写了一些来调整图像大小并设置一个HTTP服务器来提供页面。然后我们尝试注册画廊。说这是一个困难的销售都算是轻描淡写了。免费让他们加入都很困难。一些画廊让我们免费为他们制作网站，但没有人付钱给我们。

然后一些在线商店开始出现，我意识到除了订单按钮之外，它们与我们为画廊生成的网站完全相同。这个听起来令人印象深刻的所谓“互联网商店”是我们已经知道如何构建的东西。

所以在1995年夏天，在我把ANSI Common Lisp的相机就绪副本提交给出版商后，我们开始尝试编写软件来构建在线商店。起初，这将是正常的桌面软件，这在那些日子里意味着是Windows软件。这是一个令人担忧的前景，因为我们俩都不知道怎么编写Windows软件，也不想学。我们生活在Unix世界。但我们决定至少在Unix上尝试编写一个原型商店构建器。Robert写了一个购物车，而我为商店写了一个新站点生成器——当然是用Lisp。

我们在剑桥的Robert的公寓里工作。他的室友在很多大块时间里都不在，期间我可以睡在他的房间里。出于某种原因，房间里没有床架或床单，只有地板上的床垫。一天早上，当我躺在这张床垫上时，我突然想到一个主意，让我像大写字母L一样坐起来。如果我们在服务器上运行软件，并让用户通过点击链接来控制它呢？那么我们就永远不必在用户的电脑上写任何东西了。我们可以在提供它们的同一服务器上生成站点。用户不需要的不仅仅是一个浏览器。

这种软件，被称为Web应用程序，现在很常见，但当时甚至不清楚它是否可能。为了找出答案，我们决定尝试制作一个你可以通过浏览器控制的商店构建器版本。几天后，在我们有了工作的版本，8月12日。用户界面很糟糕，但它证明了你可以完全通过浏览器构建一个商店，不需要任何客户端软件或在服务器上键入任何命令行。

现在我们觉得自己真的找到了什么。我想象着一代全新的软件以这种方式工作。你不需要版本，或端口，或任何那些废话。在Interleaf，有一个叫做发布工程的整个小组，看起来至少和实际编写软件的小组一样大。现在你可以在服务器上直接更新软件。

我们成立了一家名为Viaweb的新公司，这是考虑到我们的软件通过Web工作的事实，我们从Idelle的丈夫Julian那里获得了10,000美元的种子资金。作为回报，他做了最初的法律工作，给了我们商业建议，我们给了他公司10%的股份。十年后，这笔交易成为了Y Combinator的模式。我们知道创始人需要这样的东西，因为我们自己也需要。

在这个阶段，我的净资产是负数，因为我在银行里的大约一千美元远远抵不上我欠政府的税款。（我是否勤奋地留出了我在Interleaf咨询工作中所赚的钱的适当比例？不，我没有。）所以尽管Robert有他的研究生津贴，我需要那些种子资金来维持生活。

我们最初希望在9月份启动，但随着我们对软件的改进，我们的雄心越来越大。最终，我们设法构建了一个所见即所得的站点构建器，这意味着当你创建页面时，它们看起来和你后来生成的静态页面完全一样，只是链接不是指向静态页面，而是指向存储在服务器上的哈希表中的闭包。

学习艺术对我很有帮助，因为在线商店构建器的主要目标是让用户看起来合法，而看起来合法的关键是高生产价值。如果你正确地设置了页面布局、字体和颜色，你可以让一个在卧室里经营商店的家伙看起来比一个大公司更合法。

（如果你好奇为什么我的网站看起来这么过时，那是因为它仍然是用这个软件制作的。今天它看起来可能很笨重，但在1996年它是时髦的终极代表。）

9月，Robert反叛了。“我们已经在这个上面工作了一个月，”他说，“但它仍然没有完成。”回想起来这很有趣，因为他几乎在三年后还在工作。但我决定可能需要招募更多的程序员，我问Robert在研究生院里还有谁是真正优秀的。他推荐了Trevor Blackwell，这让我一开始很惊讶，因为那时我主要知道Trevor是因为他计划将他生活中的一切都简化为一堆卡片，他随身携带着。但Rtm通常是对的，Trevor被证明是一个非常有效的黑客。

与Robert和Trevor一起工作非常有趣。他们是我认识的两个最独立思考的人，而且完全不同。如果你能看到Rtm的大脑内部，它看起来就像一个殖民时期的新英格兰教堂，而如果你能看到Trevor的大脑内部，它看起来就像奥地利洛可可风格最糟糕的过度。

我们在1996年1月开张了，有6家商店。我们等了几个月是件好事，因为尽管我们担心我们迟到了，但实际上我们几乎是致命的早。当时媒体上有很多关于电子商务的讨论，但实际上没有多少人真正想要在线商店。[8]

软件有三个主要部分：编辑器，人们用来构建站点，我写的；购物车，Robert写的；以及经理，负责跟踪订单和统计数据，Trevor写的。在它的时代，编辑器是最好的通用站点构建器之一。我保持代码紧凑，不必与任何其他软件集成，除了Robert和Trevor的，所以它非常有趣。如果我只做这个软件，接下来的三年将是我一生中最轻松的。不幸的是，我必须做更多的工作，所有这些工作都比编程更糟，接下来的三年反而成了最紧张的。

在90年代后半期，有很多初创公司在制作电子商务软件。我们决心成为Microsoft Word，而不是Interleaf。这意味着要易于使用和便宜。我们很幸运，因为我们很穷，这导致我们使Viaweb甚至比我们意识到的更便宜。我们为一家小商店收取每月100美元，为一家大商店收取每月300美元。这个低价格是一个很大的吸引力，并且一直是竞争对手的一根刺，但我们不是因为某种聪明的洞察力而设定了低价。我们不知道企业为事情支付多少钱。对我们来说，每月300美元似乎是很多钱。

我们像那样偶然做了很多正确的事情。例如，我们现在称之为“做不可扩展的事情”，尽管当时我们会将其描述为“我们太逊了，以至于我们被迫采取最绝望的措施来获得用户。”其中最常见的是为他们构建商店。这看起来特别羞辱，因为我们软件的全部理由是人们可以使用它来制作自己的商店。但为了获得用户，任何事情都可以。

我们了解到了比我们想要的更多的零售知识。例如，如果你只能拥有一件男士衬衫的小图像（按照现在的标准，那时所有的图像都是小的），最好是有领子的特写而不是整件衬衫的照片。我记得我学到这一点是因为这意味着我不得不重新扫描大约30张男士衬衫的图像。我的第一批扫描非常漂亮。

尽管这感觉不对，但这正是我们应该做的事情。为用户构建商店教会了我们零售业的知识，以及使用我们的软件的感觉。最初我对“商业”感到困惑和排斥，认为我们需要一个“商业人士”来负责它，但一旦我们开始获得用户，我就被转化了，就像我有了孩子后就被父亲身份转化一样。无论用户想要什么，我都全力以赴。也许有一天我们会有这么多用户，我不能为他们扫描图像，但与此同时，没有比这更重要的事情要做。

我当时没有意识到的另一件事是，增长率是初创公司最终的考验。我们的增长率很好。我们在1996年底大约有70家商店，在1997年底大约有500家。我错误地认为重要的是用户的绝对数量。从某种意义上说，这是重要的，因为这就是你赚钱的方式，如果你赚的不够，你可能会破产。但从长远来看，增长率会照顾到绝对数量。如果我们是Y Combinator我正在建议的初创公司，我会说：不要这么紧张，因为你做得很好。你每年增长7倍。只要不要雇佣太多的人，你很快就会盈利，然后你将掌控自己的命运。

唉，我雇佣了更多的人，部分是因为我们的投资者希望我这样做，部分是因为在互联网泡沫期间，初创公司就是这样做的。只有少数员工的公司看起来会很业余。所以我们直到大约在1998年夏天Yahoo收购我们时才达到盈亏平衡。这反过来意味着我们在整个公司的生命中都受制于投资者。由于我们和我们的投资者都对初创公司不太了解，结果即使按照初创公司的标准来看也是一团糟。

当Yahoo收购我们时，这是一种巨大的解脱。原则上，我们的Viaweb股票很有价值。这是一份业务的股份，业务是盈利的，增长迅速。但它对我来说并没有感觉非常有价值；我不知道如何评估一个企业的价值，但我非常清楚地意识到我们似乎每几个月都有一次濒死经历。自从我们开始以来，我也没有显著改变我的研究生生活方式。所以当Yahoo收购我们时，感觉就像是从破布到财富的转变。既然我们要去加利福尼亚，我买了一辆车，一辆黄色的1998年VW GTI。我记得我想，它的皮革座椅无疑是我拥有的最豪华的东西。

接下来的一年，从1998年夏天到1999年夏天，一定是我生命中最没有生产力的一年。我当时没有意识到，但我从经营Viaweb的努力和压力中筋疲力尽了。在到达加利福尼亚后，我尝试了一段时间继续我通常的编程直到凌晨3点，但是疲劳加上Yahoo过早老化的文化和圣克拉拉的阴郁的立方体农场逐渐拖垮了我。几个月后，感觉就像是在Interleaf工作一样令人不安。

Yahoo在收购我们时给了我们很多选择。当时我认为Yahoo被高估了，它们永远不会值得任何东西，但令我惊讶的是，股票在接下来的一年里上涨了5倍。我坚持到第一批期权生效，然后在1999年夏天我离开了。自从我画了最后一幅画以来已经很长时间了，我几乎忘记了我为什么要这样做。我的大脑完全充满了软件和男士衬衫，已经4年了。但我这样做是为了致富，这样我就可以画画了，我提醒自己，现在我富有了，所以我应该去画画。

当我说我要走的时候，我在Yahoo的老板和我进行了长时间的交谈，讨论我的计划。我告诉了他所有我想画的画的种类。当时，我很感动，他这么关心我。现在我知道这是因为他认为我在撒谎。我那时的期权价值大约每月200万美元。如果我要放弃这么多钱，那只能是去开一家新公司，如果我这样做了，我可能会带走一些人。这是互联网泡沫的顶峰，Yahoo是它的中心。我的老板在那一刻是亿万富翁。在那时离开去开一家新公司，对他来说似乎是一个疯狂而又看似合理的雄心勃勃的计划。

但我确实辞职去画画了，我立即开始了。没有时间可以浪费了。我已经浪费了4年时间来致富。现在当我和那些在出售公司后离开的创始人交谈时，我的建议总是一样的：去度假。那就是我应该做的，去某个地方什么也不做一两个月，但我从未想到过这个主意。

所以我尝试画画，但我似乎没有任何能量或雄心。问题的一部分是我在加利福尼亚不认识很多人。我通过在圣克鲁斯山脉买一栋房子，使这个问题更加复杂，那里的视野很美，但离任何地方都很远。我坚持了几个月，然后在绝望中回到了纽约，在那里，除非你了解租金管制，否则你会惊讶地听到我仍然拥有我的公寓，它像我旧生活的坟墓一样被封闭起来。Idelle至少在纽约，还有其他人试图在那里画画，尽管我不认识他们中的任何一个。

当我回到纽约时，我恢复了我的旧生活，只是现在我富有了。这就像听起来一样奇怪。我恢复了所有的旧模式，只是现在那里有了以前没有的门。现在当我厌倦了走路，我只需要举手，（除非下雨）一辆出租车就会停下来接我。现在当我走过迷人的小餐馆时，我可以进去点午餐。这很令人兴奋了一段时间。绘画开始变得更好。我尝试了一种新的静物画，我会用老方法画一幅画，然后拍照并打印在画布上，放大，然后用它作为第二幅静物画的底漆，用相同的对象（希望它们还没有腐烂）从同一对象画。

与此同时，我寻找公寓购买。现在我实际上可以选择我想住的社区。我问自己和各种房地产经纪人，纽约的剑桥在哪里？在偶尔访问真正的剑桥的帮助下，我逐渐意识到没有。嗯。

在2000年春天的这个时候，我有一个想法。从我们与Viaweb的经验中很明显，Web应用程序是未来。为什么不为制作Web应用程序构建一个Web应用程序呢？为什么不让人们通过浏览器在我们的服务器上编辑代码，然后为他们托管生成的应用程序呢？[9] 你可以通过API调用使用这些应用程序可以使用的服务器上的各种服务：打电话，操纵图像，接受信用卡支付等。

我对这个想法非常兴奋，以至于我无法考虑其他任何事情。它似乎是显而易见的，这是未来。我并不是特别想再开一家公司，但这似乎必须作为一个公司来体现，所以我决定搬到剑桥并启动它。我希望诱使Robert和我一起工作，但在那里我遇到了一个障碍。Robert现在在麻省理工学院做博士后，尽管他上次被我诱使参与我的计划赚了很多钱，但那也是一次巨大的时间消耗。所以虽然他同意这听起来像是一个合理的想法，但他坚决拒绝参与。

嗯。那我就自己来做吧。我招募了为Viaweb工作过的Dan Giffin，还有两个想要暑期工作本科生，我们开始尝试构建现在显然是大约二十家公司和几个开源项目价值的软件。定义应用程序的语言当然是Lisp的方言。但我并不那么天真，以为我可以向普通观众展示一个公开的Lisp；我们会像Dylan那样隐藏括号。

到那时，已经有了一种名为Viaweb的公司类型，即“应用服务提供商”或ASP。这个名字没过多久就被“软件即服务”取代了，但它足够长的时间流行，以至于我用它来命名这家新公司：它将被称为Aspra。

我开始制作应用程序构建器，Dan负责网络基础设施，两个本科生负责前两个服务（图像和电话）。但在夏天大约一半时间，我意识到我真的不想经营一家公司——特别是一个大公司，看起来这将是必要的。我之所以开始Viaweb，是因为我需要钱。现在既然我不再需要钱了，我为什么还要这样做？如果这个愿景必须作为一个公司来实现，那么去它的愿景。我会构建一个可以作为开源项目完成的子集。

令我惊讶的是，我花在这些东西上的时间并没有白费。在我们开始Y Combinator之后，我经常遇到在这种新架构上工作的部分初创公司，拥有如此多的时间思考它甚至尝试编写其中一些代码是非常有用的。

我将作为开源项目构建的子集是新的Lisp，现在我甚至不需要隐藏括号。许多Lisp黑客梦想着构建一种新的Lisp，部分原因是该语言的一个显著特点是它有方言，部分原因是，我认为，我们心中有一种柏拉图式的Lisp形式，所有现有的方言都没有达到。我当然有。所以在夏天结束时，Dan和我转而研究这种新的Lisp方言，我称之为Arc，在我在剑桥买的房子里。

接下来的春天，闪电击中了。我应邀在一次Lisp会议上发表演讲，所以我做了一个关于我们在Viaweb如何使用Lisp的演讲。之后，我将这个演讲的postscript文件放在了我的网站上，paulgraham.com，这是我多年前使用Viaweb创建的，但从未用于任何东西。在一天之内，它获得了30,000次页面浏览。到底发生了什么？引用的URL显示有人在Slashdot上发布了它。[10]

哇，我想，有观众。如果我写了东西并把它放在网上，任何人都可以阅读。现在看来这似乎是显而易见的，但那时令人惊讶。在印刷时代，读者的渠道非常狭窄，由被称为编辑的凶猛怪物守卫。让你写的东西被出版的唯一方法是将其作为书籍，或在报纸或杂志中出版。现在任何人都可以出版任何东西。

从理论上讲，自1993年以来这就已经可能了，但还没有多少人意识到这一点。我亲身经历了大部分时间的网络基础设施建设，并且作为一名作家，我花了8年时间才意识到这一点。然而，即使如此，我也花了几年时间才理解其含义。这意味着将会有一代全新的文章。

在印刷时代，发表文章的渠道非常小。除了一些被官方指定的思想家，他们参加纽约正确的派对，唯一被允许发表文章的人是专家撰写他们的专业。有许多文章从未被写过，因为没有办法发表它们。现在它们可以了，我将写它们。[12]

我做过几件不同的事情，但在我弄清楚该做什么工作的转折点上，是我开始在线发表文章的时候。从那时起，我知道无论我做什么，我都会一直写文章。

我知道在线文章最初会是一个边缘媒介。社会上它们看起来更像是疯子在他们的GeoCities网站上发布的长篇大论，而不是发表在《纽约客》上的那种温和而精美排版的作品。但到了这个时候，我足够了解，觉得这是令人鼓舞的，而不是令人气馁的。

我生活中最显著的模式之一就是，对我至少来说，从事不那么有声望的工作有多有效。静物画一直是绘画中最不具声望的形式。Viaweb和Y Combinator在开始时都看起来很逊。当我告诉别人我要写一篇要发布在我的网站上的文章时，我仍然会从陌生人那里得到茫然的眼神。即使是Lisp，尽管在智力上很有声望，就像拉丁语一样，看起来也不太时髦。

并不是说不那么有声望的工作本质上是好的。但当你发现自己尽管目前缺乏声望却被某种工作吸引时，这既是一个真正的发现，也是你有正确动机的标志。不纯的动机对于雄心勃勃的人来说是一个巨大的危险。如果说有什么会让你误入歧途，那就是给人留下深刻印象的欲望。所以，从事不那么有声望的工作并不能保证你走上了正确的轨道，但至少保证了你没有走上最常见的错误轨道。

在接下来的几年里，我写了很多关于各种不同主题的文章。O'Reilly将它们中的一些重印成一本书，名为《黑客与画家》，书名取自其中的一篇文章。我还研究了垃圾邮件过滤器，并做了更多的绘画。我过去常常每周四晚上为一群朋友举行晚宴，这教会了我如何为团体做饭。我在剑桥又买了一栋建筑，一个前糖果厂（后来，据说，是一家色情工作室），用作办公室。

2003年10月的一个晚上，我的房子里举行了一个大型派对。这是我的朋友Maria Daniels的一个巧妙想法，她是每周四晚餐的客人之一。三位不同的主人都会邀请他们的朋友参加一个派对。所以对于每个客人来说，其他三分之二的客人都是他们不认识但可能会喜欢的人。其中一位客人是我不认识但最终会非常喜欢的人：一个叫Jessica Livingston的女人。几天后我约她出去了。

Jessica负责波士顿一家投资银行的市场。这家银行认为它了解初创公司，但随着她在接下来的一年里遇到了我在初创世界的朋友，她惊讶地发现现实是多么不同。他们的故事是多么丰富多彩。所以她决定编写一本采访初创公司创始人的书。

当银行出现财务问题，她不得不解雇一半员工时，她开始寻找新工作。2005年初，她面试了波士顿一家风险投资公司的市场营销职位。他们花了好几个星期才做出决定，在此期间，我开始告诉她关于风险投资的所有问题。他们应该做更多的小额投资，而不是少数几个巨额投资，他们应该资助更年轻、更懂技术的人，而不是MBA，他们应该让创始人继续担任CEO，等等。

我写文章的一个技巧一直是做演讲。站在一群人面前，告诉他们一些不会浪费他们时间的事情的前景，是对想象力的极大激励。当哈佛计算机协会，本科生计算机俱乐部，邀请我做演讲时，我决定告诉他们如何创办一家初创公司。也许他们能够避免我们犯过的最严重的错误。

所以我做了这个演讲，在演讲中，我告诉他们最好的种子资金来源是成功的初创公司创始人，因为他们也是建议的来源。然后他们似乎都在期待地看着我。我被洪水般的商业计划淹没的前景吓坏了（如果早知道就好了），我脱口而出“不是我！”然后继续演讲。但演讲后，我意识到我确实应该停止拖延天使投资。自从Yahoo收购了我们，我就一直在考虑这个问题，现在已经过去7年了，我还没有做过一次天使投资。

与此同时，我一直在和Robert和Trevor策划我们可以一起工作的项目。我错过了和他们一起工作的日子，似乎肯定有我们可以合作的事情。

当我们在3月11日的晚餐后走在Garden和Walker街的拐角处时，这三个线索汇聚在一起。去他的那些VC，他们花了这么长时间才做出决定。我们将成立自己的投资公司，真正实现我们一直在讨论的想法。我会资助它，Jessica可以辞职并为其工作，我们也会得到Robert和Trevor作为合作伙伴。[13]

再一次，无知对我们有利。我们不知道如何成为天使投资者，2005年在波士顿也没有Ron Conways这样的人可以学习。所以我们只是做出了看起来像是显而易见的选择，我们做的一些事情结果证明是新颖的。

Y Combinator有多个组成部分，我们并没有一下子全部弄清楚。我们首先得到的部分是成为一个天使公司。在那些日子里，这两个词并不搭配。有风险投资公司，它们是组织起来的公司，有专人负责投资，但他们只做大的、百万美元的投资。还有天使，他们做更小的投资，但这些是通常专注于其他事情并在业余时间进行投资的个人。他们都没有在开始时给予创始人足够的帮助。我们知道创始人在某些方面是无助的，因为我们记得我们自己是多么无助。例如，Julian为我们做的一件事，对我们来说就像魔法一样，就是让我们成立了公司。我们很擅长编写相当困难的软件，但是实际上如何成立公司，拥有章程和股票等所有这些东西，你到底是怎么做到的？我们的计划不仅仅是进行种子投资，而是为初创公司做Julian为我们做的一切。

YC并没有组织成一个基金。它运营成本足够低，我们用自己的钱资助它。99%的读者直接忽略了这一点，但专业投资者会想“哇，这意味着他们获得了所有的回报。”然而，这再次不是我们的特别洞察。我们不知道风险投资公司是如何组织的。我们从未考虑过尝试筹集一个基金，如果这样做，我们也不知道从哪里开始。[14]

YC最独特的一点是批量模型：一次资助一群初创公司，每年两次，然后花三个月的时间集中精力帮助它们。这部分我们是偶然发现的，不仅仅是隐含地，而是由于我们对投资的无知而明确地发现的。我们需要作为投资者的经验。有什么比一次资助一大堆初创公司更好的方法呢？我们知道本科生在夏天会在科技公司找到临时工作。为什么不组织一个夏季项目，让他们创办初创公司呢？我们不会为成为某种假冒投资者而感到内疚，因为他们在类似的意义上也是假冒创始人。所以虽然我们可能不会从中赚很多钱，但至少我们可以在他们身上练习成为投资者，而对他们来说，他们可能会度过一个比在微软或高盛工作更有趣的夏天。

我们会使用我在剑桥拥有的建筑作为总部。我们每周都会在那里共进晚餐一次——在星期二，因为我已经在星期四为星期四的晚餐者做饭——晚餐后我们会请一些初创公司的专家来做演讲。

我们知道本科生正在决定夏季工作，所以在几天之内我们就制定了一个我们称之为夏季创始人计划的东西，我在网站上发布了一个公告，邀请本科生申请。我从未想过写文章会成为投资者所说的“交易流”，但事实证明这是完美的来源。[15] 我们收到了225份夏季创始人计划的申请，我们惊讶地发现其中很多申请者已经毕业，或者那年春天就要毕业。这个SFP计划已经开始比我们预期的更严肃了。

我们邀请了大约225个小组中的20个进行面对面面试，从中我们选择了8个进行资助。他们是一群令人印象深刻的人。第一批包括reddit、Justin Kan和Emmett Shear（后来创办了Twitch）、Aaron Swartz（已经帮助编写了RSS规范，几年后将成为开放获取的烈士）和Sam Altman（后来成为YC的第二任总裁）。我认为第一批如此出色并不完全是运气。你必须非常大胆才能报名参加像夏季创始人计划这样奇怪的事情，而不是在像微软或高盛这样合法的地方找到暑期工作。

初创公司的交易是基于我们与Julian达成的交易（1万美元换10%）和Robert所说的麻省理工学院研究生夏季获得的交易（6千美元）的结合。我们投资了每位创始人6千美元，在典型的两位创始人的情况下是1.2万美元，作为回报，我们获得了6%的股份。这一定是公平的，因为它是我们自己所接受交易的两倍好。而且那个第一个夏天，天气真的很热，Jessica为创始人们免费提供了空调。[16]

我很快意识到，我们偶然发现了扩大初创公司资金规模的方法。批量资助初创公司对我们来说更方便，因为我们可以在一次性地为许多初创公司做很多事情，但成为批量的一部分对初创公司来说也更好。它解决了创始人面临的最大问题之一：孤立。现在你不仅有同事，而且有能理解你面临的问题并告诉你他们是如何解决问题的同事。

随着YC的成长，我们开始注意到规模的其他优势。校友成为了一个紧密的社区，致力于互相帮助，特别是对当前批次的帮助，他们记得自己曾经处于他们的鞋子里。我们还注意到，初创公司正在成为彼此的客户。我们过去常常开玩笑地提到“YC GDP”，但随着YC的成长，这越来越不再是一个笑话。现在，许多初创公司几乎完全从他们的同批次同学中获得他们最初的客户群。

我最初并没有打算让YC成为一份全职工作。我打算做三件事：黑客，写文章，和在YC工作。随着YC的成长，我对它越来越兴奋，它开始占据了我越来越多的注意力。但在最初的几年里，我仍然能够做其他事情。

2006年夏天，我和Robert开始研发Arc的新版本。这个版本相当快，因为它被编译成了Scheme。为了测试这个新的Arc，我使用它写了Hacker News。最初，它被设计为一个面向初创公司创始人的新闻聚合器，被称为Startup News，但几个月后，我对阅读有关初创公司的文章感到厌倦。另外，我们想要接触的不仅仅是初创公司创始人。所以我们将名称改为Hacker News，并将主题改为任何能够激发智力好奇心的内容。

HN无疑对YC有好处，但它也是我工作中最大的压力来源。如果我所要做的就是选择和帮助创始人，生活将会很容易。这意味着HN是一个错误。当然，一个人工作中最大的压力来源至少应该是工作核心的接近之处。而我就像一个在马拉松比赛中痛苦的人，不是因为跑步的努力，而是因为我穿着不合脚的鞋子起了水泡。当我在YC处理一些紧急问题时，大约60%的可能性是与HN有关，而40%的可能性是与其他所有事情有关。[17]

除了HN，我还用Arc编写了YC的所有内部软件。但是，虽然我继续在Arc上做了很多工作，但我逐渐停止了对Arc的工作，部分是因为我没有时间，部分是因为现在摆弄这个语言已经不那么吸引人了，因为我们已经依赖了这么多基础设施。所以现在我的三个项目减少到了两个：写文章和在YC工作。

YC与其他我做过的工作不同。不是由我自己决定做什么，而是问题来找我。每六个月都有一批新的初创公司，他们的问题是各种各样的，无论他们是什么，都成为了我们的问题。这是非常吸引人的工作，因为好的创始人非常有效。如果你试图在尽可能短的时间内了解关于初创公司的尽可能多的信息，你找不到比这更好的方法。

工作中有一些部分我不喜欢。创始人之间的争端，弄清楚人们何时对我们撒谎，与虐待初创公司的人斗争等等。但我甚至在我不喜欢的部分上也努力工作。我被Kevin Hale曾经说过的一句话所困扰：“没有人比老板工作更努力。”他既描述性地也规范性地这么说，第二部分让我感到害怕。我希望YC做得好，所以如果我工作的辛苦程度设定了其他人工作的上限，我最好非常努力地工作。

2010年的一天，当Robert Morris访问加利福尼亚进行面试时，他做出了一些令人惊讶的事情：他主动给了我建议。我只能记得他之前这样做过一次。在Viaweb的一天，当我因为肾结石痛得弯下腰时，他建议他应该带我去医院。这就是让Rtm给出主动建议所需要的。所以我非常清楚地记得他的确切话语。“你知道吗，”他说，“你应该确保Y Combinator不是你做的最后一件酷事。”

当时我不明白他的意思，但渐渐地我明白了，他是在说我应该辞职。这似乎是个奇怪的建议，因为YC做得很好。但如果有一件事比Rtm给出建议更罕见，那就是Rtm犯错。所以这让我思考。的确，按照我目前的轨迹，YC将是我做的最后一件事，因为它正在占用我越来越多的注意力。它已经吞噬了Arc，并且正在吞噬文章。YC不是我一生的工作，所以我最终必须离开。而在2012年夏天，我母亲中风了，原因是由结肠癌引起的血栓。中风摧毁了她的平衡，她被安置在疗养院，但她真的想离开那里回到她的房子，我妹妹和我都决心帮助她做到这一点。我过去常常飞往俄勒冈州看望她，我在那些飞行中有很多思考的时间。在其中一次飞行中，我意识到我准备好将YC交给别人了。

我问Jessica是否想成为总裁，但她不想，所以我们决定尝试招募Sam Altman。我们与Robert和Trevor进行了交谈，我们同意进行全面的管理层更迭。到目前为止，YC一直由我们四个人开始的原始LLC控制。但我们希望YC能够持续很长时间，要做到这一点，它不能由创始人控制。所以如果Sam同意，我们会让他重组YC。Robert和我将退休，Jessica和Trevor将成为普通合伙人。

当我们问Sam是否想成为YC的总裁时，起初他说不。他想创办一家制造核反应堆的初创公司。但我坚持不懈，到了2013年10月，他终于同意了。我们决定他将从2014年冬季批次开始接管。2013年剩余的时间，我越来越多地将YC的运营留给Sam，部分是为了让他对我的工作有所了解，部分是因为我专注于我的母亲，她的癌症又复发了。

她于2014年1月15日去世。我们知道这一天即将到来，但当它到来时仍然很难。

我继续在YC工作到3月，以帮助那一批初创公司度过Demo Day，然后我完全退出了。（我仍然与校友和新的初创公司交谈，他们正在做我感兴趣的工作，但这只需要每周几个小时。）

我接下来应该做什么？Rtm的建议没有包括任何关于那的东西。我想做一些完全不同的事情，所以我决定去画画。我想知道如果我真正专注的话，我能变得有多好。所以我停止为YC工作的第二天，我就开始画画了。我有些生疏，需要一段时间才能恢复状态，但这至少是非常吸引人的。[18]

我花了2014年的大部分时间来画画。我以前从未能够如此不间断地工作，我比以前更好了。不是很好，但是更好。然后在11月，就在我正在画一幅画的时候，我突然失去了动力。直到那时，我总是好奇我想工作的这幅画最终会变成什么样子，但突然完成这一幅看起来像是一项任务。所以我停止了它的工作，清洁了我的刷子，从那时起就没有再画画。到目前为止，不管怎样。

我知道这听起来相当懦弱。但是注意力是一种零和游戏。如果你可以选择做什么工作，而你选择的项目不是最适合你（或至少是一个好）的项目，那么它就会阻碍另一个项目。而在50岁的时候，搞砸了有一些机会成本。

我又开始写文章了，并在接下来的几个月里写了很多新文章。我甚至写了一些不是关于初创公司的文章。然后在2015年3月，我开始再次研究Lisp。

Lisp的独特之处在于它的核心是由用它自己编写的解释器定义的语言。它最初并不打算作为普通意义上的编程语言。它被设计为计算的形式模型，图灵机的替代品。如果你想用它自己编写一个语言的解释器，你需要的最少一组预定义运算符是什么？John McCarthy发明或更准确地说是发现的Lisp是这个问题的答案。[19]

McCarthy没有意识到这个Lisp甚至可以用来编程计算机，直到他的研究生Steve Russell提出这个建议。Russell将McCarthy的解释器翻译成IBM 704机器语言，从那时起，Lisp也开始作为普通意义上的编程语言。但它作为计算模型的起源赋予了它其他语言无法匹配的权力和优雅。这就是它在大学时吸引我的地方，尽管我当时不明白为什么。

McCarthy的1960年Lisp只做了一件事，即解释Lisp表达式。它缺少你在编程语言中想要的很多东西。所以这些东西必须添加，当它们被添加时，它们并没有使用McCarthy的原始公理化方法定义。当时这是不可能的。McCarthy通过手工模拟程序的执行来测试他的解释器。但它已经是你可以通过这种方式测试的解释器的极限了——事实上，它有一个McCarthy忽略的错误。要测试一个更复杂的解释器，你必须运行它，而当时的计算机还不够强大。

现在它们足够强大了。现在你可以继续使用McCarthy的公理化方法，直到你定义了一个完整的编程语言。只要你对McCarthy的Lisp所做的每一个改变都是一个保持发现性的转换，原则上，你最终可以得到一个具有这种特性的完整语言。这比说起来要难，但如果真的可能，为什么不试试呢？所以我决定尝试一下。它花了4年时间，从2015年3月26日到2019年10月12日。幸运的是，我有一个明确定义的目标，否则很难坚持这么久。

我用Arc在它自己中写了这个新的Lisp，叫做Bel。这听起来可能像是一个矛盾，但它表明了我必须进行的巧妙操作，以使其工作。通过一系列令人难以置信的黑客攻击，我设法制作了一个足够接近的解释器，它实际上是用它自己编写的，可以运行。不是很快，但足够快，可以测试。

我不得不禁止自己在大多数时间里写文章，否则我永远也完成不了。2015年底，我花了3个月写文章，当我回到Bel工作时，我几乎无法理解代码。与其说是因为它写得不好，不如说是因为问题非常复杂。当你在编写一个用它自己编写的解释器时，很难追踪在哪个层次上发生了什么，错误可能会在你得到它们的时候几乎被加密。

所以我决定在Bel完成之前不再写文章。但我在工作时告诉了很少人关于Bel。所以多年来，一定有人觉得我一直什么都没做，而事实上我比以往任何时候都更努力地工作。偶尔，在与一些可怕的错误搏斗了几个小时后，我会检查Twitter或HN，看到有人问“Paul Graham还在编码吗？”

在Bel上工作很艰难，但令人满意。我如此专注地工作，以至于在任何给定时间，我脑海中都有一大块代码，并且可以在那里写更多。我记得2015年的一个阳光明媚的日子里，我带孩子们去海边，在看着他们在潮汐池里玩耍的时候，我想出了如何处理一些涉及连续性的棘手问题。感觉我正在正确地生活。我记得那是因为它感觉多么新奇。好消息是，在接下来的几年里，我有更多像这样的时刻。

2016年夏天，我们搬到了英格兰。我们希望我们的孩子体验生活在另一个国家的感觉，而且由于我一出生就是英国公民，这似乎是显而易见的选择。我们本来只打算待一年，但我们非常喜欢那里，所以我们仍然住在那里。所以大部分的Bel是在英国写的。

2019年秋天，Bel终于完成了。像McCarthy的原始Lisp一样，它是一个规范而不是实现，尽管像McCarthy的Lisp一样，它是一个用代码表达的规范。

现在我可以再次写文章了，我写了很多关于我堆积起来的主题的文章。我在2020年继续写文章，但我也开始考虑我可以做的其他事情。我应该如何选择要做的事情？嗯，我过去是如何选择要做的事情的？我为自己写了一篇文章来回答这个问题，我惊讶地发现答案是多么长和混乱。如果这让我感到惊讶，那么我想它可能对其他人也很有趣，并且对于那些生活同样混乱的人是鼓舞人心的。所以我为其他人写了一篇更详细的版本，这是它的最后一句话。


注释：

[1] 我的计算机经历跳过了计算机发展中的一个步骤：具有交互式操作系统的分时共享机器。我直接从批处理过渡到了微型计算机，这使得微型计算机显得更加令人兴奋。

[2] 大多数意大利语中的抽象概念词汇几乎总能从它们的英语同源词中预测出来（除了偶尔的陷阱，如'polluzione'）。不同的通常是日常词汇。所以，如果你用一些简单的动词串联起许多抽象概念，你可以让一点意大利语走得更远。

[3] 我住在圣费利切广场4号，所以我去学院的路直穿老佛罗伦萨的脊柱：经过皮蒂宫，过桥，经过奥尔桑米凯莱，位于大教堂和洗礼堂之间，然后沿着里卡索利街走到圣马可广场。我从街道层面看到了佛罗伦萨在各种可能的条件下的样子，从空荡荡的黑暗冬夜到炎热的夏日，街道上挤满了游客。

[4] 当然，如果你愿意，并且人们愿意，你可以像画静物一样画人。这种类型的肖像可以说是静物画的顶峰，尽管长时间的坐姿往往会让被画者的表情显得痛苦。

[5] Interleaf 是许多拥有聪明人并建造了令人印象深刻的技术的公司之一，但最终还是被摩尔定律压垮了。在1990年代，商品（即英特尔）处理器能力的指数增长像推土机一样碾压了高端、特殊用途的硬件和软件公司。

[6] RISD 的标志性风格追求者并不特别唯利是图。在艺术界，金钱和酷是紧密相连的。任何昂贵的东西都会被视为酷，任何被视为酷的东西很快就会变得同样昂贵。

[7] 技术上，这个公寓不是租金控制的，而是租金稳定的，但这只有纽约人会知道或关心的细节。关键是它非常便宜，不到市场价格的一半。

[8] 大多数软件一旦完成就可以启动。但当软件是一个在线商店构建器，而你正在托管这些商店时，如果你还没有用户，这个事实将非常明显。因此，在我们能够公开启动之前，我们必须私下启动，也就是说，招募一组初始用户，并确保他们有看起来不错的商店。

[9] 我们在 Viaweb 中有一个代码编辑器，供用户定义自己的页面样式。他们不知道，但他们实际上是在编辑 Lisp 表达式。但这不是一个应用程序编辑器，因为代码在商家的网站生成时运行，而不是在购物者访问它们时运行。

[10] 这是现在一个熟悉的体验的第一个例子，接下来发生的事情也是，当我阅读评论时，发现它们充满了愤怒的人。我怎么能声称 Lisp 比其他语言更好？难道它们不全都是图灵完备的吗？有时人们会告诉我，他们为我写的论文的回应感到抱歉，但我并不夸张，当我回答说这一直是这样，从一开始就是这样。这是领域的一部分。一篇文章必须告诉读者他们不知道的事情，有些人不喜欢被告知这样的事情。

[11] 当然，在90年代，人们确实在互联网上放了很多东西，但把东西放到网上和在网上发布它是不同的。在网上发布意味着你将在线版本视为（或至少是一个）主要版本。

[12] 这里有一个普遍的教训，我们与 Y Combinator 的经验也教会了我们：即使导致它们的限制已经消失，习俗仍然会长时间地限制你。习惯的风投实践曾经，像关于发布论文的习俗一样，是基于真正的限制。创业公司曾经要昂贵得多，而且相应地更罕见。现在它们可以便宜和普遍，但风投的习俗仍然反映了旧世界，就像关于写作论文的习俗仍然反映了印刷时代的限制一样。

这反过来意味着，在快速变化影响的领域（习俗更有可能过时的地方），独立思考的人（即受习俗影响较小的人）将具有优势。

不过，这里有一个有趣的点：你并不总能预测哪些领域会受到快速变化的影响。显然，软件和风险投资会，但谁会预料到论文写作会呢？

[13] Y Combinator 并不是最初的名字。起初我们被称为 Cambridge Seed。但我们不想要一个地区性的名字，以防有人在硅谷复制我们，所以我们根据 lambda 演算中一个非常酷的技巧——Y 组合子——重新命名了自己。

我选择橙色作为我们的颜色，部分原因是因为它是最温暖的颜色，部分原因是没有风险投资公司使用它。在2005年，所有的风险投资公司都使用像栗色、海军蓝和森林绿这样的稳重颜色，因为他们试图吸引有限合伙人（LPs），而不是创始人。YC 的标志本身是一个内部玩笑：Viaweb 的标志曾是一个白色 V 在一个红色圆圈上，所以我把 YC 的标志做成了一个白色 Y 在一个橙色正方形上。

[14] YC 在2009年开始的几年里确实成为了一个基金，因为它变得如此之大，我再也负担不起个人资助它了。但在 Heroku 被收购后，我们有了足够的资金回到自筹资金的状态。

[15] 我从来不喜欢“交易流”这个术语，因为它意味着任何给定时间点上新创业公司的数量是固定的。这不仅是错误的，而且正是 YC 的目的是证明它是错误的，通过促使那些本不会存在的创业公司成立。

[16] 她报告说，它们的形状和大小都不同，因为空调器很畅销，她不得不拿到她能得到的任何型号，但它们现在都比她能携带的要重。

[17] HN 的另一个问题是当你既写论文又运营论坛时出现的奇怪边缘情况。当你运营一个论坛时，人们假定你至少会看到每一场涉及你的对话。而当你写论文时，人们会在论坛上发布对它们的极具想象力的误解。单独来看，这两种现象都是乏味但可以忍受的，但结合起来却是灾难性的。你实际上必须回应这些误解，因为假定你在对话中存在意味着不回应任何足够高赞的误解会被视为默认它是正确的。但这反过来又鼓励了更多的误解；任何想要和你争论的人都感觉到现在是他们的机会。

[18] 离开 YC 最糟糕的事情是不再和 Jessica 一起工作了。我们几乎在我们认识彼此的整个时间里都在 YC 工作，我们既没有尝试过也不想将它从我们的个人生活中分离出来，所以离开就像拔起一棵根深蒂固的树一样。

[19] 要更精确地讨论发明与发现的概念，有一种方法是谈论外星生物。任何足够先进的外星文明肯定知道勾股定理，例如。我虽然不那么确定，但相信他们也会知道 McCarthy 1960年论文中的 Lisp。

但如果是这样，就没有理由认为这是他们可能知道的语言的极限。可以推测外星生物也需要数字、错误和输入/输出。所以似乎至少存在一条从 McCarthy 的 Lisp 出发的路径，沿着这条路径，发现性被保留下来了。


感谢Trevor Blackwell，John Collison，Patrick Collison，Daniel Gackle，Ralph Hazell，Jessica Livingston，Robert Morris和Harj Taggar阅读了这篇文章的草稿。
